{"version":3,"sources":["components/JokeComponents/JokeLines.js","components/JokeComponents/Jokes.js","components/Header.js","components/TodoComponents/TodoItem.js","components/TodoComponents/todoData.js","components/TodoComponents/Todos.js","components/FlexboxComponents/Flexbox.js","components/SpecificityComponents/Specificity.js","components/MemeComponents/MemeRequest.js","components/MemeComponents/MakeRequest.js","App.js","serviceWorker.js","index.js"],"names":["JokeLines","number","question","punchLine","JokeContent","props","react_default","a","createElement","style","color","joke","display","Jokes","middleName","timeOfDay","hours","Date","getHours","myStyles","fontSize","backgroundColor","padding","TheJokes","map","concat","Header","linkContent","word","c","react_router_dom","to","activeClassName","className","TodoItem","_useState","useState","todo","completed","_useState2","Object","slicedToArray","check","setCheck","type","checked","onChange","fontStyle","textDecoration","text","todosData","id","Todos","todoData","todos","setTodos","todoItems","data","TodoComponents_TodoItem","onClick","toConsumableArray","length","Math","random","Flexbox","content","floor","placeholder","Specificity","MemeRequest","count","setCount","req","complete","pending","error","res","setRes","useEffect","axios","then","catch","url","MakeRequest","method","title","App","components_Header","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9871b16.chunk.js","sourcesContent":["import Jokes from \"./Jokes\";\nimport React from \"react\";\n\nconst JokeLines = [\n    {\n        number:\"1\",\n        question:\"What's the best thing about Switzerland?\",\n        punchLine:\"I don't know, but the flag is a big plus!\"\n    } ,\n    {\n        number:\"2\",\n        question:\"Did you hear about the mathematician who's afraid of negative numbers?\",\n        punchLine:\"He'll stop at nothing to avoid them!\"\n    },\n    {\n        number:\"3\"\n    }\n]\n\nexport default JokeLines","import React from \"react\"\nimport JokeLines from \"./JokeLines\";\n\n\nfunction JokeContent(props){\n    return(\n    <div>\n        {/*if null make the text black*/}\n        <p style={{color: !props.joke.question && '#000'}}>Joke #{props.joke.number}</p>\n        {/*checks if the object is null*/}\n        <h3 style={{display: props.joke.question ? \"block\" : \"none\"}}>Question: {props.joke.question}</h3>\n        <h3 style={{display: props.joke.punchLine ? \"block\" : \"none\"}}>Answer: {props.joke.punchLine}</h3>\n        <hr/>\n    </div>\n\n    )\n}\n\nfunction Jokes(props) {\n\n    const firstName = \"Aaron\"\n    let middleName\n    const lastName = \"Miller\"\n    const date = new Date()\n    const hours = date.getHours()\n    let timeOfDay\n    const myStyles = {\n        fontSize: 30,\n        backgroundColor: \"#3b3b3b\",\n        padding: \"20px\"\n    }\n\n    if(firstName==\"Aaron\" && lastName==\"Miller\"){middleName = \"Jerome\"}\n\n    if (hours < 12) {\n        timeOfDay = \"morning\"\n        myStyles.color = \"#04756F\"\n    } else if (hours >= 12 && hours < 17) {\n        timeOfDay = \"afternoon\"\n        myStyles.color = \"#8914A3\"\n    } else {\n        timeOfDay = \"night\"\n        myStyles.color = \"#D90000\"\n    }\n\n    const TheJokes = JokeLines.map(joke => <JokeContent joke={joke} />);\n\n    return (\n        <div style={myStyles}>\n            {/*Note this below is an example of the ES6 Format Literals Template*/}\n            <h1>{`Welcome to ${firstName} ${middleName} ${lastName}'s meme application`}!</h1>\n            <h2>I hope you are having a good {timeOfDay}!</h2>\n            <hr/>\n            <h3>The two jokes of the day</h3>\n            {TheJokes}\n\n\n        </div>\n    )\n}\n\nexport default Jokes","import React from 'react'\nimport Jokes from \"./JokeComponents/Jokes\";\nimport JokeLines from \"./JokeComponents/JokeLines\";\nimport {NavLink} from 'react-router-dom'\nimport './Header.css'\n\n\n\nfunction Header(){\n\n    const linkWords = [{word:\"jokes\"}, {word:\"memes\"}, {word:\"flexbox\"}, {word:\"todos\"}, {word:\"specificity\"}];\n    const linkContent = linkWords.map((c) => {\n        return (\n            <NavLink to={c.word} activeClassName=\"active\" className=\"link\">\n                {c.word}\n            </NavLink>\n        )\n    });\n\n    return(\n        <header className=\"header\">\n            <div className=\"header-buttons\">\n                {linkContent}\n            </div>\n        </header>\n    )\n}\n\nexport default Header","import React, {useState} from 'react'\n\nfunction TodoItem(props) {\n\n    const [check, setCheck] = useState(props.todo.completed);\n\n    const crossedOutStyle = {\n        fontStyle: \"italic\",\n        color: \"#cdcdcd\",\n        textDecoration: \"line-through\"\n    }\n\n    return(\n        <div className=\"todo-item\">\n            <input\n                type=\"checkbox\"\n                checked={check}\n                onChange={() => setCheck(!check)}\n            />\n            <p style={check ? crossedOutStyle : null}>{props.todo.text}</p>\n        </div>\n    )\n}\n\nexport default TodoItem","const todosData = [\n    {\n        id: 1,\n        text: \"Take out the trash\",\n        completed: true\n    },\n    {\n        id: 2,\n        text: \"Grocery shopping\",\n        completed: false\n    },\n    {\n        id: 3,\n        text: \"Walk and Clean dog\",\n        completed: false\n    },\n    {\n        id: 4,\n        text: \"Mow lawn\",\n        completed: true\n    },\n    {\n        id: 5,\n        text: \"Catch up on flexbox\",\n        completed: false\n    }\n]\n\nexport default todosData","import React, {useState} from 'react'\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport TodoItem from './TodoItem'\nimport todoData from './todoData'\n\n\nfunction Todos(){\n    const [todos, setTodos] = useState(todoData);\n\n    const addTodo = () => {\n        setTodos([\n            ...todos,\n            {\n                id: todos.length,\n                text: Math.random() * 100,\n                completed: false\n            }\n        ])\n    };\n\n    const todoItems = todos.map(data =>\n        <TodoItem todo={data}/>\n    );\n\n    return(\n        <div>\n            {todoItems}\n            <button onClick={() => addTodo()}>\n                Click to Add a Todo\n            </button>\n        </div>\n    );\n}\n\nexport default Todos\n","import React from 'react'\nimport './Flexbox.css'\nimport './basic.css'\n\nexport default function Flexbox(){\n\n    const array = [{word:\"content\"},\n        {word:\"content\"},{word:\"content\"},\n        {word:\"content\"},{word:\"content\"},\n        {word:\"content\"},{word:\"content\"},\n        {word:\"content\"},{word:\"content\"},\n        {word:\"content\"},{word:\"content\"},\n        {word:\"content\"},{word:\"content\"},\n        {word:\"content\"},{word:\"content\"},];\n\n    const content = array.map((c) => {\n        return(\n            <div className={`size-${Math.floor(Math.random()*Math.floor(3))}`}>\n                c.word\n            </div>\n        )\n    });\n\n    return(\n        <body>\n            <div className=\"container horizontal-wrap\">\n                {content}\n            </div>\n\n            <br/>\n            <hr/>\n            <br/>\n\n            <div className=\"container horizontal\">\n                <div className=\"Home\">Home</div>\n                <div className=\"Search\">Search</div>\n                <div className=\"Logout\">Logout</div>\n                <div className=\"More\">More</div>\n                <div className=\"Signin\">Signin</div>\n            </div>\n\n            <br/>\n            <hr/>\n            <br/>\n\n            <div className=\"container vertical\">\n                <div className=\"Home\">Home</div>\n                <div className=\"Search\">Search</div>\n                <div className=\"Logout\">Logout</div>\n                <div className=\"More\">More</div>\n                <div className=\"Signin\">Signin</div>\n            </div>\n\n            <br/>\n            <hr/>\n            <br/>\n\n            <div className=\"container absolute-center\">\n                <div className=\"X\">X</div>\n            </div>\n\n            <br/>\n            <hr/>\n            <br/>\n\n            <nav>\n                <ul className=\"container got-search\">\n                    <li>Home</li>\n                    <li>Profile</li>\n                    <li className=\"search got-search\">\n                        <input type=\"text\" className=\"search-input\" placeholder=\"Search\"/>\n                    </li>\n                    <li>Logout</li>\n                </ul>\n            </nav>\n        </body>\n    )\n}","import React from 'react'\nimport './Specificity.css'\n\nexport default function Specificity(){\n    return(\n        <ul id=\"summer-drinks\">\n            <li className=\"favorite\">Whiskey and Ginger Ale</li>\n            <li>Wheat Beer</li>\n            <li>Mint Julip</li>\n        </ul>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MakeRequest from './MakeRequest'\n\n\nexport default function MemeRequest() {\n    const todosApi = \"https://jsonplaceholder.typicode.com/todos\";\n    const [count, setCount] = useState(1);\n    const todo = MakeRequest({\n        method: \"GET\",\n        url: `${todosApi}/${count}`\n    });\n    return (\n        <div>\n            <button onClick={() => setCount(count + 1)}>Next Todo</button>\n            <h1>Todo {count}</h1>\n            <div>\n                {(todo.pending && \"Loading...\") || (todo.complete && todo.data.title)}\n            </div>\n        </div>\n    );\n}\n","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nexport default function MakeRequest(req) {\n    const [res, setRes] = useState({\n        data: null,\n        complete: false,\n        pending: false,\n        error: false\n    });\n    useEffect(\n        () => {\n            setRes({\n                data: null,\n                pending: true,\n                error: false,\n                complete: false\n            });\n            axios(req)\n                .then(res =>\n                    setRes({\n                        data: res.data,\n                        pending: false,\n                        error: false,\n                        complete: true\n                    })\n                )\n                .catch(() =>\n                    setRes({\n                        data: null,\n                        pending: false,\n                        error: true,\n                        complete: true\n                    })\n                );\n        },\n        [req.url]\n    );\n    return (res);\n}","import React, {useState} from 'react'\nimport {Route, Switch, BrowserRouter as Router} from 'react-router-dom'\nimport './App.css'\nimport './style.css'\nimport Header from './components/Header'//uses the string template format\nimport Todos from './components/TodoComponents/Todos'//\nimport Jokes from './components/JokeComponents/Jokes'\nimport Flexbox from './components/FlexboxComponents/Flexbox'\nimport Specificity from './components/SpecificityComponents/Specificity'\nimport MemeRequest from \"./components/MemeComponents/MemeRequest\";\n\nfunction App() {\n\n\n\n  return (\n      <div className=\"Summer-2019-Practice\">\n          <Router>\n              <Header/>\n              <Switch>\n                  <Route exact path=\"/todos\" component={Todos} />\n                  <Route exact path=\"/jokes\" component={Jokes}/>\n                  <Route exact path=\"/flexbox\" component={Flexbox}/>\n                  <Route exact path=\"/specificity\" component={Specificity}/>\n                  <Route exact path=\"/memes\" component={MemeRequest}/>\n              </Switch>\n\n          </Router>\n      </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport MyInfo from './MyInfo';\n\n\n\n\n\n//takes 2 args\n//1. what I want to render\n//2. where I want to render it\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}